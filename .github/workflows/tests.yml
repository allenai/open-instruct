name: Tests

on:
  push:
    branches:
      - main
      - v*-release
  pull_request:
    branches:
      - main
  merge_group:

jobs:

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:13.0.0-cudnn-devel-ubuntu24.04
    steps:
    
      - name: Delete huge unnecessary tools folder
        run: |
          echo "Disk space before cleanup:"
          df -h /
          
          # Remove unnecessary directories
          DIRS_TO_REMOVE=(
            "/opt/hostedtoolcache"
            "/usr/share/dotnet"
            "$AGENT_TOOLSDIRECTORY"
            "/usr/local/lib/android"
            "/usr/local/share/boost"
          )
          
          for dir in "${DIRS_TO_REMOVE[@]}"; do
            [ -d "$dir" ] && sudo rm -rf "$dir" && echo "Removed: $dir"
          done
          
          # Remove unnecessary packages
          PACKAGES_TO_REMOVE=(
            '^aspnetcore-.*' '^dotnet-.*' '^llvm-.*' 'php.*'
            '^mongodb-.*' '^mysql-.*' azure-cli google-chrome-stable
            firefox powershell mono-devel
          )
          
          sudo apt-get remove -y "${PACKAGES_TO_REMOVE[@]}" 2>/dev/null || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          
          # Clean up Docker
          docker system prune -af --volumes
          
          echo "Disk space after cleanup:"
          df -h /

      - name: Install minimal CUDA toolkit for nvcc
        run: |
          # Install only the minimal CUDA toolkit needed for nvcc
          sudo apt-get update
          sudo apt-get install -y wget software-properties-common
          
          # Add NVIDIA package repositories
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb
          sudo dpkg -i cuda-keyring_1.1-1_all.deb
          rm cuda-keyring_1.1-1_all.deb
          
          # Install only cuda-nvcc package (much smaller than full toolkit)
          sudo apt-get update
          sudo apt-get install -y cuda-nvcc-12-6
          
          # Clean up apt cache to save disk space
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          
          # Create symlink so nvcc is available
          ln -s /usr/local/cuda-12.6/bin/nvcc /usr/bin/nvcc || true
          
          echo "nvcc installed, checking version:"
          nvcc --version || echo "nvcc not found"
          
          echo "Disk space after CUDA install and cleanup:"
          df -h
          
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Disk space after checkout
        run: |
          echo "=== Disk space after checkout ==="
          df -h
          echo ""
          echo "=== Repository size ==="
          du -sh .
          echo ""
          echo "=== Largest files/dirs in repo ==="
          du -h -d 1 . | sort -rh | head -20
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.8.6"
          
      - name: Set up Python
        run: uv sync
        
      - name: Disk space after dependencies
        run: |
          echo "=== Disk space after installing dependencies ==="
          df -h
          echo ""
          echo "=== UV cache size ==="
          du -sh ~/.cache/uv 2>/dev/null || echo "No UV cache found"
          echo ""
          echo "=== Virtual environment size ==="
          du -sh .venv/ 2>/dev/null || echo "No .venv found"
          echo ""
          echo "=== Largest packages in site-packages ==="
          find .venv -name "site-packages" -type d -exec du -h -d 1 {} \; 2>/dev/null | sort -rh | head -20 || true
          echo ""
          echo "=== Workspace largest directories ==="
          du -h -d 1 . | sort -rh | head -20
          
      - name: Run unit tests
        run: uv run pytest -n auto
        
      - name: Final disk space check
        if: always()
        run: |
          echo "=== Final disk space ==="
          df -h
          echo ""
          echo "=== Temp directory size ==="
          du -sh /tmp 2>/dev/null || echo "Cannot access /tmp"
          echo ""
          echo "=== Final workspace size ==="
          du -sh .