FROM nvidia/cuda:12.8.0-devel-ubuntu22.04

ARG DEBIAN_FRONTEND="noninteractive"
ENV TZ="America/Los_Angeles"

# Combine all apt operations and clean aggressively
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl wget git sudo nginx ca-certificates && \
    mkdir -p /etc/nginx/conf.d && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /usr/share/man/*

ENV NVIDIA_DRIVER_CAPABILITIES=graphics,utility,compute

# Install MFT and DOCA with aggressive cleanup
ENV MFT_VER=4.31.0-149
ENV DOFED_VER=2.10.0
ENV OS_VER=ubuntu2204

RUN wget -q https://www.mellanox.com/downloads/MFT/mft-${MFT_VER}-x86_64-deb.tgz && \
    tar -xzf mft-${MFT_VER}-x86_64-deb.tgz && \
    mft-${MFT_VER}-x86_64-deb/install.sh --without-kernel && \
    rm -rf mft-${MFT_VER}-x86_64-deb* && \
    wget -q https://www.mellanox.com/downloads/DOCA/DOCA_v${DOFED_VER}/host/doca-host_${DOFED_VER}-093000-25.01-${OS_VER}_amd64.deb && \
    dpkg -i doca-host_${DOFED_VER}-093000-25.01-${OS_VER}_amd64.deb && \
    rm -f doca-host_${DOFED_VER}-093000-25.01-${OS_VER}_amd64.deb && \
    apt-get update && \
    apt-get -y install --no-install-recommends doca-ofed-userspace && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copy UV
COPY --from=ghcr.io/astral-sh/uv:0.8.6 /uv /uvx /bin/

# Install Beaker tools with cleanup
RUN curl -sL "https://beaker.org/api/v3/release/cli?os=linux&arch=amd64&version=${BEAKER_VERSION}" | \
    tar -xz -C /usr/local/bin/ ./beaker && \
    uv tool install --no-cache-dir beaker-gantry && \
    rm -rf /root/.cache

WORKDIR /stage/

ENV HF_HUB_ENABLE_HF_TRANSFER=1
ENV UV_COMPILE_BYTECODE=0
ENV UV_NO_CACHE=1

# Copy dependency files
COPY pyproject.toml uv.lock ./
COPY open_instruct open_instruct

# Install dependencies with aggressive cleanup
RUN uv sync --frozen --no-install-project --no-cache && \
    uv run -m nltk.downloader punkt punkt_tab && \
    # Clean Python cache
    find /stage/.venv -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true && \
    find /stage/.venv -type f \( -name "*.pyc" -o -name "*.pyo" \) -delete && \
    find /stage/.venv -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null || true && \
    find /stage/.venv -type d -name "tests" -exec rm -rf {} + 2>/dev/null || true && \
    find /stage/.venv -type d -name "test" -exec rm -rf {} + 2>/dev/null || true && \
    find /stage/.venv -type d -name "docs" -exec rm -rf {} + 2>/dev/null || true && \
    find /stage/.venv -type f -name "*.md" -delete 2>/dev/null || true && \
    # Remove specific large unnecessary files from packages
    rm -rf /stage/.venv/lib/python*/site-packages/nvidia/cublas/lib/libcublasLt.so.11 2>/dev/null || true && \
    rm -rf /stage/.venv/lib/python*/site-packages/nvidia/cudnn/lib/libcudnn_*_train.so.* 2>/dev/null || true && \
    rm -rf /stage/.venv/lib/python*/site-packages/torch/test 2>/dev/null || true && \
    rm -rf /stage/.venv/lib/python*/site-packages/torch/bin/test_* 2>/dev/null || true && \
    # Clear all caches
    rm -rf /root/.cache /tmp/* /var/tmp/*

# Copy application files
COPY eval eval
COPY configs configs
COPY scripts scripts
COPY oe-eval-internal oe-eval-internal
COPY mason.py mason.py
COPY .git/ ./.git/

ENV PATH=/stage/.venv/bin:$PATH